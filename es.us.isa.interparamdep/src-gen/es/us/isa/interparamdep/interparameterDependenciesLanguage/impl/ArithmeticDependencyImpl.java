/**
 * generated by Xtext 2.19.0
 */
package es.us.isa.interparamdep.interparameterDependenciesLanguage.impl;

import es.us.isa.interparamdep.interparameterDependenciesLanguage.ArithmeticDependency;
import es.us.isa.interparamdep.interparameterDependenciesLanguage.InterparameterDependenciesLanguagePackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Arithmetic Dependency</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.ArithmeticDependencyImpl#getParam1 <em>Param1</em>}</li>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.ArithmeticDependencyImpl#getArithOp <em>Arith Op</em>}</li>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.ArithmeticDependencyImpl#getParam2 <em>Param2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArithmeticDependencyImpl extends AtomicImpl implements ArithmeticDependency
{
  /**
   * The default value of the '{@link #getParam1() <em>Param1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam1()
   * @generated
   * @ordered
   */
  protected static final String PARAM1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getParam1() <em>Param1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam1()
   * @generated
   * @ordered
   */
  protected String param1 = PARAM1_EDEFAULT;

  /**
   * The default value of the '{@link #getArithOp() <em>Arith Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArithOp()
   * @generated
   * @ordered
   */
  protected static final String ARITH_OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArithOp() <em>Arith Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArithOp()
   * @generated
   * @ordered
   */
  protected String arithOp = ARITH_OP_EDEFAULT;

  /**
   * The default value of the '{@link #getParam2() <em>Param2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam2()
   * @generated
   * @ordered
   */
  protected static final String PARAM2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getParam2() <em>Param2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam2()
   * @generated
   * @ordered
   */
  protected String param2 = PARAM2_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArithmeticDependencyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return InterparameterDependenciesLanguagePackage.Literals.ARITHMETIC_DEPENDENCY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getParam1()
  {
    return param1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParam1(String newParam1)
  {
    String oldParam1 = param1;
    param1 = newParam1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM1, oldParam1, param1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArithOp()
  {
    return arithOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArithOp(String newArithOp)
  {
    String oldArithOp = arithOp;
    arithOp = newArithOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__ARITH_OP, oldArithOp, arithOp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getParam2()
  {
    return param2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParam2(String newParam2)
  {
    String oldParam2 = param2;
    param2 = newParam2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM2, oldParam2, param2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM1:
        return getParam1();
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__ARITH_OP:
        return getArithOp();
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM2:
        return getParam2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM1:
        setParam1((String)newValue);
        return;
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__ARITH_OP:
        setArithOp((String)newValue);
        return;
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM2:
        setParam2((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM1:
        setParam1(PARAM1_EDEFAULT);
        return;
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__ARITH_OP:
        setArithOp(ARITH_OP_EDEFAULT);
        return;
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM2:
        setParam2(PARAM2_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM1:
        return PARAM1_EDEFAULT == null ? param1 != null : !PARAM1_EDEFAULT.equals(param1);
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__ARITH_OP:
        return ARITH_OP_EDEFAULT == null ? arithOp != null : !ARITH_OP_EDEFAULT.equals(arithOp);
      case InterparameterDependenciesLanguagePackage.ARITHMETIC_DEPENDENCY__PARAM2:
        return PARAM2_EDEFAULT == null ? param2 != null : !PARAM2_EDEFAULT.equals(param2);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (param1: ");
    result.append(param1);
    result.append(", arithOp: ");
    result.append(arithOp);
    result.append(", param2: ");
    result.append(param2);
    result.append(')');
    return result.toString();
  }

} //ArithmeticDependencyImpl
