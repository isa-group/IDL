/**
 * generated by Xtext 2.19.0
 */
package es.us.isa.interparamdep.interparameterDependenciesLanguage.impl;

import es.us.isa.interparamdep.interparameterDependenciesLanguage.GeneralClause;
import es.us.isa.interparamdep.interparameterDependenciesLanguage.GeneralClauseContinuation;
import es.us.isa.interparamdep.interparameterDependenciesLanguage.InterparameterDependenciesLanguagePackage;
import es.us.isa.interparamdep.interparameterDependenciesLanguage.PositivePredicate;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Positive Predicate</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.PositivePredicateImpl#getFirstClause <em>First Clause</em>}</li>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.PositivePredicateImpl#getClauseContinuation <em>Clause Continuation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PositivePredicateImpl extends MinimalEObjectImpl.Container implements PositivePredicate
{
  /**
   * The cached value of the '{@link #getFirstClause() <em>First Clause</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirstClause()
   * @generated
   * @ordered
   */
  protected GeneralClause firstClause;

  /**
   * The cached value of the '{@link #getClauseContinuation() <em>Clause Continuation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClauseContinuation()
   * @generated
   * @ordered
   */
  protected GeneralClauseContinuation clauseContinuation;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PositivePredicateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return InterparameterDependenciesLanguagePackage.Literals.POSITIVE_PREDICATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GeneralClause getFirstClause()
  {
    return firstClause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFirstClause(GeneralClause newFirstClause, NotificationChain msgs)
  {
    GeneralClause oldFirstClause = firstClause;
    firstClause = newFirstClause;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__FIRST_CLAUSE, oldFirstClause, newFirstClause);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFirstClause(GeneralClause newFirstClause)
  {
    if (newFirstClause != firstClause)
    {
      NotificationChain msgs = null;
      if (firstClause != null)
        msgs = ((InternalEObject)firstClause).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__FIRST_CLAUSE, null, msgs);
      if (newFirstClause != null)
        msgs = ((InternalEObject)newFirstClause).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__FIRST_CLAUSE, null, msgs);
      msgs = basicSetFirstClause(newFirstClause, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__FIRST_CLAUSE, newFirstClause, newFirstClause));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GeneralClauseContinuation getClauseContinuation()
  {
    return clauseContinuation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClauseContinuation(GeneralClauseContinuation newClauseContinuation, NotificationChain msgs)
  {
    GeneralClauseContinuation oldClauseContinuation = clauseContinuation;
    clauseContinuation = newClauseContinuation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__CLAUSE_CONTINUATION, oldClauseContinuation, newClauseContinuation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClauseContinuation(GeneralClauseContinuation newClauseContinuation)
  {
    if (newClauseContinuation != clauseContinuation)
    {
      NotificationChain msgs = null;
      if (clauseContinuation != null)
        msgs = ((InternalEObject)clauseContinuation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__CLAUSE_CONTINUATION, null, msgs);
      if (newClauseContinuation != null)
        msgs = ((InternalEObject)newClauseContinuation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__CLAUSE_CONTINUATION, null, msgs);
      msgs = basicSetClauseContinuation(newClauseContinuation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__CLAUSE_CONTINUATION, newClauseContinuation, newClauseContinuation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__FIRST_CLAUSE:
        return basicSetFirstClause(null, msgs);
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__CLAUSE_CONTINUATION:
        return basicSetClauseContinuation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__FIRST_CLAUSE:
        return getFirstClause();
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__CLAUSE_CONTINUATION:
        return getClauseContinuation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__FIRST_CLAUSE:
        setFirstClause((GeneralClause)newValue);
        return;
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__CLAUSE_CONTINUATION:
        setClauseContinuation((GeneralClauseContinuation)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__FIRST_CLAUSE:
        setFirstClause((GeneralClause)null);
        return;
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__CLAUSE_CONTINUATION:
        setClauseContinuation((GeneralClauseContinuation)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__FIRST_CLAUSE:
        return firstClause != null;
      case InterparameterDependenciesLanguagePackage.POSITIVE_PREDICATE__CLAUSE_CONTINUATION:
        return clauseContinuation != null;
    }
    return super.eIsSet(featureID);
  }

} //PositivePredicateImpl
