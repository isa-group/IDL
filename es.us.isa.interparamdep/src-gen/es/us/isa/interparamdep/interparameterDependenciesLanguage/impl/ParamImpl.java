/**
 * generated by Xtext 2.19.0
 */
package es.us.isa.interparamdep.interparameterDependenciesLanguage.impl;

import es.us.isa.interparamdep.interparameterDependenciesLanguage.InterparameterDependenciesLanguagePackage;
import es.us.isa.interparamdep.interparameterDependenciesLanguage.Param;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Param</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.ParamImpl#getName <em>Name</em>}</li>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.ParamImpl#getStringValues <em>String Values</em>}</li>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.ParamImpl#getPatternString <em>Pattern String</em>}</li>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.ParamImpl#getBooleanValue <em>Boolean Value</em>}</li>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.ParamImpl#getArithOp <em>Arith Op</em>}</li>
 *   <li>{@link es.us.isa.interparamdep.interparameterDependenciesLanguage.impl.ParamImpl#getDoubleValue <em>Double Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParamImpl extends ParamAssignmentImpl implements Param
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getStringValues() <em>String Values</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringValues()
   * @generated
   * @ordered
   */
  protected EList<String> stringValues;

  /**
   * The default value of the '{@link #getPatternString() <em>Pattern String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPatternString()
   * @generated
   * @ordered
   */
  protected static final String PATTERN_STRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPatternString() <em>Pattern String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPatternString()
   * @generated
   * @ordered
   */
  protected String patternString = PATTERN_STRING_EDEFAULT;

  /**
   * The default value of the '{@link #getBooleanValue() <em>Boolean Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBooleanValue()
   * @generated
   * @ordered
   */
  protected static final String BOOLEAN_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBooleanValue() <em>Boolean Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBooleanValue()
   * @generated
   * @ordered
   */
  protected String booleanValue = BOOLEAN_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getArithOp() <em>Arith Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArithOp()
   * @generated
   * @ordered
   */
  protected static final String ARITH_OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArithOp() <em>Arith Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArithOp()
   * @generated
   * @ordered
   */
  protected String arithOp = ARITH_OP_EDEFAULT;

  /**
   * The default value of the '{@link #getDoubleValue() <em>Double Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDoubleValue()
   * @generated
   * @ordered
   */
  protected static final String DOUBLE_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDoubleValue() <em>Double Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDoubleValue()
   * @generated
   * @ordered
   */
  protected String doubleValue = DOUBLE_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParamImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return InterparameterDependenciesLanguagePackage.Literals.PARAM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.PARAM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getStringValues()
  {
    if (stringValues == null)
    {
      stringValues = new EDataTypeEList<String>(String.class, this, InterparameterDependenciesLanguagePackage.PARAM__STRING_VALUES);
    }
    return stringValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPatternString()
  {
    return patternString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPatternString(String newPatternString)
  {
    String oldPatternString = patternString;
    patternString = newPatternString;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.PARAM__PATTERN_STRING, oldPatternString, patternString));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBooleanValue()
  {
    return booleanValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBooleanValue(String newBooleanValue)
  {
    String oldBooleanValue = booleanValue;
    booleanValue = newBooleanValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.PARAM__BOOLEAN_VALUE, oldBooleanValue, booleanValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArithOp()
  {
    return arithOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArithOp(String newArithOp)
  {
    String oldArithOp = arithOp;
    arithOp = newArithOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.PARAM__ARITH_OP, oldArithOp, arithOp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDoubleValue()
  {
    return doubleValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDoubleValue(String newDoubleValue)
  {
    String oldDoubleValue = doubleValue;
    doubleValue = newDoubleValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, InterparameterDependenciesLanguagePackage.PARAM__DOUBLE_VALUE, oldDoubleValue, doubleValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.PARAM__NAME:
        return getName();
      case InterparameterDependenciesLanguagePackage.PARAM__STRING_VALUES:
        return getStringValues();
      case InterparameterDependenciesLanguagePackage.PARAM__PATTERN_STRING:
        return getPatternString();
      case InterparameterDependenciesLanguagePackage.PARAM__BOOLEAN_VALUE:
        return getBooleanValue();
      case InterparameterDependenciesLanguagePackage.PARAM__ARITH_OP:
        return getArithOp();
      case InterparameterDependenciesLanguagePackage.PARAM__DOUBLE_VALUE:
        return getDoubleValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.PARAM__NAME:
        setName((String)newValue);
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__STRING_VALUES:
        getStringValues().clear();
        getStringValues().addAll((Collection<? extends String>)newValue);
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__PATTERN_STRING:
        setPatternString((String)newValue);
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__BOOLEAN_VALUE:
        setBooleanValue((String)newValue);
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__ARITH_OP:
        setArithOp((String)newValue);
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__DOUBLE_VALUE:
        setDoubleValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.PARAM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__STRING_VALUES:
        getStringValues().clear();
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__PATTERN_STRING:
        setPatternString(PATTERN_STRING_EDEFAULT);
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__BOOLEAN_VALUE:
        setBooleanValue(BOOLEAN_VALUE_EDEFAULT);
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__ARITH_OP:
        setArithOp(ARITH_OP_EDEFAULT);
        return;
      case InterparameterDependenciesLanguagePackage.PARAM__DOUBLE_VALUE:
        setDoubleValue(DOUBLE_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case InterparameterDependenciesLanguagePackage.PARAM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case InterparameterDependenciesLanguagePackage.PARAM__STRING_VALUES:
        return stringValues != null && !stringValues.isEmpty();
      case InterparameterDependenciesLanguagePackage.PARAM__PATTERN_STRING:
        return PATTERN_STRING_EDEFAULT == null ? patternString != null : !PATTERN_STRING_EDEFAULT.equals(patternString);
      case InterparameterDependenciesLanguagePackage.PARAM__BOOLEAN_VALUE:
        return BOOLEAN_VALUE_EDEFAULT == null ? booleanValue != null : !BOOLEAN_VALUE_EDEFAULT.equals(booleanValue);
      case InterparameterDependenciesLanguagePackage.PARAM__ARITH_OP:
        return ARITH_OP_EDEFAULT == null ? arithOp != null : !ARITH_OP_EDEFAULT.equals(arithOp);
      case InterparameterDependenciesLanguagePackage.PARAM__DOUBLE_VALUE:
        return DOUBLE_VALUE_EDEFAULT == null ? doubleValue != null : !DOUBLE_VALUE_EDEFAULT.equals(doubleValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", stringValues: ");
    result.append(stringValues);
    result.append(", patternString: ");
    result.append(patternString);
    result.append(", booleanValue: ");
    result.append(booleanValue);
    result.append(", arithOp: ");
    result.append(arithOp);
    result.append(", doubleValue: ");
    result.append(doubleValue);
    result.append(')');
    return result.toString();
  }

} //ParamImpl
